<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ID3707" xml:space="preserve">
    <value>ID3707: The value '{0}' is not a valid OAuth grant_type.</value>
  </data>
  <data name="ID3708" xml:space="preserve">
    <value>ID3708: Access token request should have a valid value specified for the grant_type, client_id and client_secret.</value>
  </data>
  <data name="ID3709" xml:space="preserve">
    <value>ID3709: The value '{0}' is not a well-formed Uri.</value>
  </data>
  <data name="ID3710" xml:space="preserve">
    <value>ID3710: Access token request with authorization code should have a valid code and redirect_uri parameters specified.</value>
  </data>
  <data name="ID3712" xml:space="preserve">
    <value>ID3712: The parameter 'expires_in' should be an integer that gives the number of seconds the access token is valid.</value>
  </data>
  <data name="ID3711" xml:space="preserve">
    <value>ID3711: Access token response message should contain a valid access_token specified.</value>
  </data>
  <data name="ID3713" xml:space="preserve">
    <value>ID3713: The parameter 'error_description' cannot be set to an empty string.</value>
  </data>
  <data name="ID3714" xml:space="preserve">
    <value>ID3714: The parameter 'error_uri' should be set to an Absolute Uri.</value>
  </data>
  <data name="ID3715" xml:space="preserve">
    <value>ID3715: Error response message should have the 'error' parameter set to a valid value.</value>
  </data>
  <data name="ID3717" xml:space="preserve">
    <value>ID3717: The value '{0}' is not a valid OAuth 'response_type'.</value>
  </data>
  <data name="ID3716" xml:space="preserve">
    <value>ID3716: EndUser authorization request requires the 'response_type', 'client_id' and 'redirect_uri' to be specified.</value>
  </data>
  <data name="ID3718" xml:space="preserve">
    <value>ID3718: EndUser authorization response message should either have the 'code' or the 'access_token' parameter specified.</value>
  </data>
  <data name="ID3719" xml:space="preserve">
    <value>ID3719: The parameter 'scope' cannot be set to an empty string.</value>
  </data>
  <data name="ID3720" xml:space="preserve">
    <value>ID3720: The parameter 'state' cannot be set to an empty string.</value>
  </data>
  <data name="ID3730" xml:space="preserve">
    <value>ID3730: An invalid OAuth message was received.</value>
  </data>
  <data name="ID3731" xml:space="preserve">
    <value>ID3731: An error occurred while reading or writing an OAuth message.</value>
  </data>
  <data name="ID3721" xml:space="preserve">
    <value>ID3721: The HTTP method '{0}' and HTTP Content type '{1}' is not a supported combination.</value>
  </data>
  <data name="ID3722" xml:space="preserve">
    <value>ID3722: The HTTP method '{0}' is not supported.</value>
  </data>
  <data name="ID3741" xml:space="preserve">
    <value>ID3741: Authentication type '{0}' is not valid.</value>
  </data>
  <data name="ID3723" xml:space="preserve">
    <value>ID3723: Unable to construct a valid OAuth message from the given set of parameters.</value>
  </data>
  <data name="ID3724" xml:space="preserve">
    <value>ID3724: Cannot serialize the OAuth message of type '{0}'.</value>
  </data>
  <data name="ID3750" xml:space="preserve">
    <value>ID3750: The redirect_uri does not match the Uri registered with the current client_id.</value>
  </data>
  <data name="ID3751" xml:space="preserve">
    <value>ID3751: The client_id could not be verified.</value>
  </data>
</root>